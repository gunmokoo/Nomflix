{"version":3,"sources":["assets/noPosterSmall.PNG","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_data","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","state","a","data","results","this","setState","console","log","React","Component","HomeContainer","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","event","preventDefault","searchByTerm","target","SearchContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","release_date","runtime","episode_run_time","genres","genre","index","name","overview","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","DetailContainer","Header","header","List","ul","li","current","SLink","Link","withRouter","mainRouter","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a80ab0b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.99f375c7.PNG\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      Loding...\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.PNG\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_data && movie.release_data.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_data && movie.release_data.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_data && movie.release_data.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"edc1c8692b4b7c7f645c0186597455f2\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  error,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    {\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search Movies or TV Shows...\"\n            value={searchTerm}\n            onChange={updateTerm}\n          />\n        </Form>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    imageUrl={movie.poster_path}\n                    rating={movie.vote_average}\n                    year={\n                      movie.release_data && movie.release_data.substring(0, 4)\n                    }\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Show Results\">\n                {tvResults.map((show) => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path}\n                    title={show.original_name}\n                    rating={show.vote_average}\n                    year={\n                      show.first_air_date && show.first_air_date.substring(0, 4)\n                    }\n                  />\n                ))}\n              </Section>\n            )}\n          </>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </Container>\n    }\n  </>\n);\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({\n        error: \"Can't find results.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.PNG\").default\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name}/`\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n      location: { pathname },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find anything.\",\n      });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\nconst mainRouter = () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n\nexport default mainRouter;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    } \n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20,20,20,1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default GlobalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}